#!/usr/bin/env ruby

require 'fileutils'
require 'optparse'

options = {}

OptionParser.new do |opts|
  opts.banner = 'Clones each repo specified in repos.txt.'
  opts.banner += "\n\n"
  opts.banner = 'Usage: ./scripts/checkout'
end.parse!

unless File.exists? 'repos.txt'
  STDERR.puts 'ERROR: File not found: repos.txt'
  STDERR.puts ''
  STDERR.puts 'repos.txt should contain a list of Git repo paths like:'
  STDERR.puts '  nicholasdower/foo'
  STDERR.puts '  nicholasdower/bar'
  exit 1
end

FileUtils.mkdir_p 'repos'

repos = File.readlines('repos.txt').map(&:strip)

repos.each_with_index do |repo, i|
  dir = "repos/#{repo}"
  if !Dir.exist? dir
    puts "#{repo}:"
    result = system "git clone git@github.com:#{repo}.git #{dir}"
    unless result
      STDERR.puts "ERROR: Failed to clone: git@github.com:#{repo}.git"
      exit 1
    end
    puts if i < repos.length - 1
  else
    puts "#{repo}: Already exists."
    puts if i < repos.length - 1
  end
end

Dir.chdir 'repos'

Dir.glob('*').select { |f| File.directory? f }.each do |user|
  dirs = Dir.glob("#{user}/*").select { |f| File.directory? f }

  if dirs.empty?
    STDERR.puts "ERROR: Encountered unexpected directory: #{user}"
  end

  dirs.each do |dir|
    unless repos.include? dir
      STDERR.puts "ERROR: Encountered unexpected directory: #{dir}"
    end
  end
end
